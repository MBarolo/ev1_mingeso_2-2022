Presentation: templates
Business: controllers, services
Persistence: repositories

Enlaces:
	localhost:8080 [Jenkins]
	localhost:8081 [app (local)]
	localhost:9000 [sonarqube]
	localhost:3306 [MySQL (local)]


Docker (Mysql local):
docker run -d -p 3306:3306 --name mysql_local -e MYSQL_ROOT_PASSWORD=pass --mount src=db_data,dst=/var/lib/mysql mysql


--EVALUACION--

Terraform (Provision de server AWS, instalacion automatica de Docker)

terraform init
terraform validate
terraform plan
terraform apply

Luego de esto se deber√≠a enviar a la instancia EC2 los archivos necesarios (.sql docker compose, etc)
utilizando putty (pscp) con los siguientes comandos:
 
pscp -i C:\Users\Matix\OneDrive\Escritorio\Terraform\ev1_mingeso_key.ppk C:\Users\Matix\OneDrive\Escritorio\Mingeso\ev1_mingeso_2-2022\sql\create.sql ubuntu@ :create.sql

pscp -i C:\Users\Matix\OneDrive\Escritorio\Terraform\ev1_mingeso_key.ppk C:\Users\Matix\OneDrive\Escritorio\Mingeso\ev1_mingeso_2-2022\sql\load.sql ubuntu@ :load.sql

pscp -i C:\Users\Matix\OneDrive\Escritorio\Terraform\ev1_mingeso_key.ppk C:\Users\Matix\OneDrive\Escritorio\Terraform\docker-compose.yml ubuntu@ :docker-compose.yml

Luego conectarse mediante ssh a la instancia de AWS

Luego es posible levantar todo realizando

docker-compose up


Para Jenkins: Tener abierta la base de datos en local y sonarqube


